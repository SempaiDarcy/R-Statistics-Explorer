В R система управления пакетами работает немного иначе, чем в Node.js. (Просто я работал с ним:)
Хотя в R нет точной аналогии с node_modules и package.json, 
существуют инструменты для управления зависимостями, такие как renv, 
которые позволяют отслеживать и устанавливать пакеты для проекта подобно тому, 
как это делает npm в JavaScript.

Как это работает в R:
Пакеты устанавливаются глобально:

Когда ты используешь команду install.packages("matrixStats"), R устанавливает пакет в глобальную библиотеку на компьютере (например, в твоём случае это C:/Users/oneak/AppData/Local/R/win-library/4.4).
Это означает, что установленные пакеты доступны для всех проектов, и тебе не нужно устанавливать их для каждого проекта заново (если они уже установлены).
Аналог node_modules:

В Node.js пакеты устанавливаются в папку node_modules внутри проекта. В R это не происходит по умолчанию, 
пакеты устанавливаются глобально, а не локально в проекте.
Однако, с помощью пакета renv можно добиться аналогичного поведения, 
чтобы пакеты устанавливались локально для каждого проекта.
**Аналог package.json — renv:

renv — это инструмент для управления зависимостями в R. 
Он позволяет сохранить список всех пакетов, используемых в проекте, и их версии, подобно package.json в Node.js.
При использовании renv создаётся файл renv.lock, 
который содержит информацию о всех установленных пакетах и версиях для конкретного проекта.
Как работать с renv (аналог package.json):